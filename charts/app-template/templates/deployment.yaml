{{- $releaseName := .Release.Name }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-template.fullname" . }}
  labels:
    {{- include "app-template.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
    {{- if .Values.strategy.rollingUpdate }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default "25%" }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default "25%" }}
    {{- end }}
  selector:
    matchLabels:
      {{- include "app-template.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "app-template.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-template.serviceAccountName" . }}
      {{- with .Values.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      shareProcessNamespace: true
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds | default 30 }}
      containers:
        - name: {{ ".Release.Name" }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          env:
            - name: NODE_HOST
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: $(NODE_HOST):4317
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- range $key, $value := .Values.secrets }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "app-template.fullname" $ }}-secret
                  key: {{ $key }}
            {{- end }}
          {{- with .Values.envFrom }}
          envFrom:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort | default 8080 }}
              protocol: TCP
          {{- if .Values.deployment.startupProbe.enabled }}
          startupProbe:
            {{- if .Values.deployment.startupProbe.httpGet }}
            httpGet:
              {{- toYaml .Values.deployment.startupProbe.httpGet | nindent 14 }}
            {{- end }}
            {{- if .Values.deployment.startupProbe.failureThreshold }}
            failureThreshold: {{ .Values.deployment.startupProbe.failureThreshold }}
            {{- end }}
            {{- if .Values.deployment.startupProbe.periodSeconds }}
            periodSeconds: {{ .Values.deployment.startupProbe.periodSeconds }}
            {{- end }}
          {{- end }}
          {{- if .Values.deployment.livenessProbe.enabled }}
          livenessProbe:
            {{- if .Values.deployment.livenessProbe.httpGet }}
            httpGet:
              {{- toYaml .Values.deployment.livenessProbe.httpGet | nindent 14 }}
            {{- end }}
            {{- if .Values.deployment.livenessProbe.initialDelaySeconds }}
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            {{- end }}
            {{- if .Values.deployment.livenessProbe.periodSeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            {{- end }}
            {{- if .Values.deployment.livenessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
            {{- end }}
            {{- if .Values.deployment.livenessProbe.successThreshold }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            {{- end }}
            {{- if .Values.deployment.livenessProbe.failureThreshold }}
            failureThreshold: {{ .Values.deployment.livenessProbe.failureThreshold }}
            {{- end }}
          {{- end }}
          {{- if .Values.deployment.readinessProbe.enabled }}
          readinessProbe:
            {{- if .Values.deployment.readinessProbe.httpGet }}
            httpGet:
              {{- toYaml .Values.deployment.readinessProbe.httpGet | nindent 14 }}
            {{- end }}
            {{- if .Values.deployment.readinessProbe.initialDelaySeconds }}
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            {{- end }}
            {{- if .Values.deployment.readinessProbe.periodSeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            {{- end }}
            {{- if .Values.deployment.readinessProbe.timeoutSeconds }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
            {{- end }}
            {{- if .Values.deployment.readinessProbe.successThreshold }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            {{- end }}
            {{- if .Values.deployment.readinessProbe.failureThreshold }}
            failureThreshold: {{ .Values.deployment.readinessProbe.failureThreshold }}
            {{- end }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- range .Values.sidecarContainers }}
        - name: {{ .name }}
          image: {{ .image }}
          {{- if .command }}
          command:
            {{- toYaml .command | nindent 12 }}
          {{- end }}
          {{- if .args }}
          args:
            {{- toYaml .args | nindent 12 }}
          {{- end }}
          {{- if .env }}
          env:
            {{- toYaml .env | nindent 12 }}
          {{- end }}
          {{- if .ports }}
          ports:
            {{- toYaml .ports | nindent 12 }}
          {{- end }}
          {{- if .volumeMounts }}
          volumeMounts:
            {{- toYaml .volumeMounts | nindent 12 }}
          {{- end }}
          resources:
            {{- toYaml .resources | nindent 12 }}
          securityContext:
            {{- if .securityContext }}
            {{- toYaml .securityContext | nindent 12 }}
            {{- else }}
            {{- toYaml $.Values.containerSecurityContext | nindent 12 }}
            {{- end }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      affinity:
        {{- if .Values.affinity }}
        {{- toYaml .Values.affinity | nindent 8 }}
        {{- else }}
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  {{- include "app-template.selectorLabels" . | nindent 20 }}
              topologyKey: "kubernetes.io/hostname"
        {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
