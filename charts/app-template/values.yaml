nameOverride: ""
fullnameOverride: ""

image:
  repository: nginx
  pullPolicy: IfNotPresent
  tag: "1.21"

imagePullSecrets: []

sidecarContainers: []
  # - name: logging-sidecar
  #   image: fluent/fluent-bit:latest
  #   resources:
  #     requests:
  #       cpu: 10m
  #       memory: 64Mi
  #     limits:
  #       cpu: 100m
  #       memory: 128Mi
  #   env:
  #     - name: LOG_LEVEL
  #       value: "info"

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  fsGroup: 65534
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65534
  runAsGroup: 65534
  capabilities:
    drop:
      - ALL
  seccompProfile:
    type: RuntimeDefault

deployment:
  replicaCount: 1
  revisionHistoryLimit: 3
  startupProbe:
    enabled: true
    httpGet:
      path: /
      port: http
    failureThreshold: 10
    periodSeconds: 5
  readinessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3
  livenessProbe:
    enabled: true
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 15
    periodSeconds: 20
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 3

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 25%
    maxUnavailable: 25%

serviceAccount:
  create: true
  annotations: {}
  name: ""
service:
  type: ClusterIP
  port: 80
  targetPort: http
  annotations: {}
env: {}
  # Example:
  # NODE_ENV: production
  # PORT: 8080

envFrom: []
  # - configMapRef:
  #     name: my-config
  # - secretRef:
  #     name: my-secret
resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # cert-manager.io/cluster-issuer: letsencrypt
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

secrets: {}

volumes: []
  # - name: config
  #   configMap:
  #     name: my-config

volumeMounts: []
  # - name: config
  #   mountPath: /etc/config
  #   readOnly: true

podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

terminationGracePeriodSeconds: 30

topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: kubernetes.io/hostname
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app: data-tools-dev

podDisruptionBudget:
  enabled: false
  minAvailable: 1

networkPolicy:
  enabled: false
  policyTypes:
    - Ingress
  ingress: []
  egress: []

priorityClassName: ""