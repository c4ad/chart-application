{{- $releaseName := .Release.Name }}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name | quote }}
  labels:
    app.kubernetes.io/name: {{ .Values.app.name | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Values.image.tag | quote }}
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
spec:
  replicas: {{ .Values.replicaCount | default 1 }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit | default 0 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app.name | quote }}
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app.name | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
      annotations:
      {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccount.name | default .Values.app.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      shareProcessNamespace: true
      terminationGracePeriodSeconds: 5
      volumes:
        - name: {{ $releaseName }}-cloudfront
          secret:
            secretName: {{ $releaseName }}-cloudfront
      containers:
        - name: {{ .Release.Name | quote }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.environments .Values.secrets .Values.signedCookies }}
          volumeMounts:
          - mountPath: /var/run/secrets/
            name: {{ $releaseName }}-cloudfront
          env:
          - name: NODE_HOST
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: $(NODE_HOST):4317
          {{- include "api-service.env" . | nindent 10 }}
          {{- end }}
          ports:
          - containerPort: {{ .Values.service.targetPort | default 8080 }}
          {{- include "api-service.probes" . | nindent 10 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
