name: DEV Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18

      - name: Check out code portal-backend
        uses: actions/checkout@v3
        with:
          path: portal-backend
          token: ${{ secrets.GH_PAT }}

      - uses: actions/checkout@v3
      - name: Setup snyk
        run: |
          curl https://static.snyk.io/cli/latest/snyk-linux -o snyk
          chmod +x snyk
          sudo mv ./snyk /usr/local/bin

      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        run: snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Build variables
        id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
          
      - name: Compile code
        run: make build

      - name: Test
        run: |
          CGO_ENABLED=0 go test ./...

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        if: github.ref == 'refs/heads/main'
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build image
        if: github.ref == 'refs/heads/main'
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.vars.outputs.sha_short }}
        run: make docker-build

      - name: Tag image and push to ECR
        if: github.ref == 'refs/heads/main'
        id: send_to_ecr
        env:
          DOCKER_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          VERSION: ${{ steps.vars.outputs.sha_short }}
        run: make docker-release

      - name: Check out backend-deploy
        if: github.ref == 'refs/heads/main'
        uses: actions/checkout@v3
        with:
          repository: c4ad/backend-deploy
          token: ${{ secrets.GH_PAT }}
          path: backend-deploy
        id: tag_version

      - name: Render Dev backend deploy YAML
        if: github.ref == 'refs/heads/main'
        uses: nowactions/envsubst@v1
        with:
          input: apps/envs/dev/api-server.yaml.tmpl
          output: apps/envs/dev/api-server.yaml
        env:
          IMAGE_TAG: ${{ steps.vars.outputs.sha_short }}

      - name: Push changes
        if: github.ref == 'refs/heads/main'
        working-directory: ./backend-deploy
        run: |
          echo "updated build id for dev $(echo ${IMAGE_TAG})"
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add apps/envs/dev/api-server.yaml
          git commit -m "updated build id for dev $(echo ${IMAGE_TAG})"
          git push

      - name: Send Slack Message
        if: github.ref == 'refs/heads/main'
        id: slack
        uses: slackapi/slack-github-action@v1.23.0
        with:
          # This data can be any valid JSON from a previous step in the GitHub Action
          payload: |
            {
              "msg": "Dev Backend Deployed",
              "deployer": "${{ github.actor }}",
              "pr": "${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
              "version": "${{ github.ref_name }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}